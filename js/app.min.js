document.addEventListener("DOMContentLoaded", function () {
  function e(e) {
    return document.querySelectorAll(e);
  }
  e(".hamburguer").forEach(function (e) {
    e.addEventListener("click", function (e) {
      e.preventDefault(),
        this.classList.toggle("-active"),
        this.classList.contains("-active")
          ? document.body.classList.add("active")
          : document.body.classList.remove("active");
    });
  }),
    e(".scroller").forEach((e) => {
      e.addEventListener("click", function (o) {
        o.preventDefault(),
          document.body.classList.contains("active") &&
            (document.body.classList.remove("active"),
            document.querySelector(".hamburguer").classList.remove("-active"));
        (o = this.getAttribute("data-url")), (o = document.querySelector(o));
        if (o) {
          var n = window.getComputedStyle(o),
            i = parseInt(n.getPropertyValue("padding-top")),
            n = parseInt(n.getPropertyValue("padding-bottom"));
          let e = o.getBoundingClientRect().top + window.scrollY + i,
            t = window.innerHeight;
          window.innerWidth <= 768 && ((e -= 50), (t -= 70));
          o = o.offsetHeight - i - n;
          o < t && ((i = (t - o) / 2), (e -= i)),
            window.scroll({ top: e, behavior: "smooth" });
        }
      });
    }),
    window.addEventListener("scroll", function () {
      10 < window.scrollY
        ? document.body.classList.add("scrolled")
        : document.body.classList.remove("scrolled");
    });
  {
    function i(e) {
      if (
        ((e = Object.assign({ mean: 0, dev: 1, pool: [] }, e)),
        !(Array.isArray(e.pool) && 0 < e.pool.length))
      ) {
        for (
          var t, o, n, i = e.mean, a = e.dev;
          1 <=
          (t =
            (o = 2 * Math.random() - 1) * o + (n = 2 * Math.random() - 1) * n);

        );
        return a * (o * Math.sqrt((-2 * Math.log(t)) / t)) + i;
      }
      var r = e,
        c = 0;
      do {
        var d = Math.round(normal({ mean: r.mean, dev: r.dev }));
        if (d < r.pool.length && 0 <= d) return r.pool[d];
      } while (++c < 100);
    }
    const P = 0.1,
      I = 3e4;
    let n = [];
    function a(e, t) {
      return Math.random() * (t - e) + e;
    }
    function r(o, t, i) {
      n.forEach((e, t) => {
        n[t] =
          ((t = (((t = o) - (e = e).startTime) % e.duration) / e.duration),
          { ...e, x: t, y: Math.sin(t * e.arc) * e.amplitude + e.offsetY });
      }),
        i.clearRect(0, 0, t.width, t.height),
        n.forEach((e) => {
          var t, o, n;
          (e = e),
            (o = i),
            (n = (t = document.getElementById("particle-canvas")).height / 100),
            (o.fillStyle = e.colour),
            o.beginPath(),
            o.ellipse(
              e.x * t.width,
              e.y * n + t.height / 2,
              e.diameter * n,
              e.diameter * n,
              0,
              0,
              2 * Math.PI
            ),
            o.fill();
        }),
        requestAnimationFrame((e) => r(e, t, i));
    }
    {
      const [C, M] = (function () {
        let e = document.getElementById("particle-canvas"),
          t =
            ((e.width = e.offsetWidth * window.devicePixelRatio),
            (e.height = e.offsetHeight * window.devicePixelRatio),
            e.getContext("2d"));
        return (
          window.addEventListener("resize", () => {
            (e.width = e.offsetWidth * window.devicePixelRatio),
              (e.height = e.offsetHeight * window.devicePixelRatio),
              (t = e.getContext("2d"));
          }),
          [e, t]
        );
      })();
      for (let e = 0; e < 1e3; e++)
        n.push(
          (function () {
            const e = 200,
              t = 255,
              o = 230,
              n = a(0.05, 0.35); // Verde muy claro y mÃ¡s transparente
            return {
              x: -2,
              y: -2,
              diameter: Math.max(0, i({ mean: P, dev: P / 2 })),
              duration: i({ mean: I, dev: 0.1 * I }),
              amplitude: i({ mean: 16, dev: 2 }),
              offsetY: i({ mean: 0, dev: 10 }),
              arc: 2 * Math.PI,
              startTime: performance.now() - a(0, I),
              colour: `rgba(${e}, ${t}, ${o}, ${n})`,
            };
          })(C)
        );
      requestAnimationFrame((e) => r(e, C, M));
    }
  }
  var t = document.querySelectorAll(".picker-link"),
    o = document.querySelectorAll(".close-btn");
  document.querySelectorAll("aside");
  const n = document.querySelector("aside");
  function c(e) {
    "get-quote-btn" !== e.target.id && e.stopPropagation(),
      n.classList.add("open");
  }
  function d(e) {
    e.stopPropagation(), n.classList.remove("open");
  }
  t.forEach((e) => {
    e.addEventListener("click", c);
  }),
    o.forEach((e) => {
      e.addEventListener("click", d);
    });
  var s = "//www.youtube.com/embed/i9-hYh4EPrs?enablejsapi=1";
  const l = document.querySelector(".videowrap");
  function u(e) {
    e.preventDefault();
    var e = this.getAttribute("data-video"),
      t = document.getElementById("video");
    switch ((t.classList.add("visible"), l.classList.add("playing"), e)) {
      case "1":
        t.src = "//www.youtube.com/embed/bgXie_Sa_7U?enablejsapi=1";
        break;
      case "2":
        t.src = "//www.youtube.com/embed/SaU3xju7xvs?enablejsapi=1";
        break;
      case "3":
      case "4":
        t.src = s;
    }
    t.src += "&autoplay=1";
  }
  function m() {
    document.querySelector(".videowrap").classList.remove("visible"),
      l.classList.remove("playing"),
      (document.getElementById("video").src = "");
  }
  document.querySelectorAll(".video_thumb").forEach(function (e) {
    e.addEventListener("click", u);
  }),
    document.querySelectorAll(".closebox, .videowrap").forEach(function (e) {
      e.addEventListener("click", function (e) {
        m();
      });
    }),
    document.addEventListener("keydown", function (e) {
      "Escape" === e.key && m();
    });
  const v = L(1, 10),
    f = L(1, 10);
  L(0, 1);
  const h = L(3, 5),
    p = L(5, 10),
    g = L(-10, 10);
  function w(e, t) {
    gsap.to(e, p(), {
      rotation: g(t),
      ease: Sine.easeInOut,
      onComplete: w,
      onCompleteParams: [e, -1 * t],
    });
  }
  function y(e, t) {
    gsap.to(e, h(), {
      x: v(t),
      ease: Sine.easeInOut,
      onComplete: y,
      onCompleteParams: [e, -1 * t],
    });
  }
  function b(e, t) {
    gsap.to(e, h(), {
      y: f(t),
      ease: Sine.easeInOut,
      onComplete: b,
      onCompleteParams: [e, -1 * t],
    });
  }
  function L(t, e) {
    const o = e - t;
    return (e = 1) => (t + o * Math.random()) * e;
  }
  gsap.utils.toArray(".can > img").forEach((e) => {
    gsap.set(e, { x: v(-1), y: v(1), rotation: g(-1) }),
      y(e, 1),
      b(e, -1),
      w(e, 1);
  });
  (t = new IntersectionObserver(
    (e, t) => {
      e.forEach((e) => {
        e.isIntersecting &&
          (document.querySelectorAll(".odometer").forEach(function (e) {
            var t = e.getAttribute("data-value");
            new Odometer({
              el: e,
              value: 0,
              theme: "minimal",
              format: "d",
              duration: 3e3,
            }).render(),
              (e.textContent = t);
          }),
          t.unobserve(e.target));
      });
    },
    { threshold: 1 }
  )),
    (o = document.querySelector(".odometer"));
  function E() {
    var e = window.innerWidth / 1920;
    window.innerWidth < 980
      ? (document.documentElement.style.fontSize = "1em")
      : (document.documentElement.style.fontSize = 1.25 * e + "em");
  }
  t.observe(o),
    window.addEventListener("load", E),
    window.addEventListener("resize", E);
  t = document.querySelector("aside:not(.open)");
  t &&
    t.addEventListener("click", function (e) {
      c(e);
    });
  const S = document.querySelector("#prev-video"),
    q = document.querySelector("#next-video"),
    x = document.querySelector(".videos");
  let k = 0;
  function A() {
    S.classList.toggle("disable", k <= 0),
      q.classList.toggle("disable", 2 <= k);
  }
  if (S && q && x)
    S.addEventListener("click", () => {
      k--, (x.scrollLeft -= +x.offsetWidth), A();
    }),
      q.addEventListener("click", () => {
        k++, (x.scrollLeft += +x.offsetWidth), A();
      }),
      A();
});
